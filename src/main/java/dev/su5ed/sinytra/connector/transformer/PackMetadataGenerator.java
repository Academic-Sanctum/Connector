package dev.su5ed.sinytra.connector.transformer;

import com.google.gson.JsonObject;
import dev.su5ed.sinytra.connector.ConnectorUtil;
import net.minecraftforge.fart.api.Transformer;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.List;

public class PackMetadataGenerator implements Transformer {
    public static final String RESOURCE = "pack.mcmeta";
    public static final int RESOURCE_PACK_FORMAT = 15;

    private final String modid;

    private boolean seen;

    public PackMetadataGenerator(String modid) {
        this.modid = modid;
    }

    @Override
    public ResourceEntry process(ResourceEntry entry) {
        if (RESOURCE.equals(entry.getName())) {
            this.seen = true;
        }
        return entry;
    }

    @Override
    public Collection<? extends Entry> getExtras() {
        if (!this.seen) {
            JsonObject packMeta = new JsonObject();
            JsonObject pack = new JsonObject();
            JsonObject description = new JsonObject();
            description.addProperty("text", this.modid + " resources, generated by Connector");
            pack.add("description", description);
            pack.addProperty("pack_format", RESOURCE_PACK_FORMAT);
            packMeta.add("pack", pack);

            try (ByteArrayOutputStream byteStream = new ByteArrayOutputStream()) {
                try (Writer writer = new OutputStreamWriter(byteStream)) {
                    ConnectorUtil.prettyGson().toJson(packMeta, writer);
                    writer.flush();
                }
                byte[] data = byteStream.toByteArray();
                return List.of(ResourceEntry.create(RESOURCE, ConnectorUtil.ZIP_TIME, data));
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return List.of();
    }
}
